packageDescription("dplyr")
install.packages("argaprser")
install.packages("argaprse")
install.packages("argparser")
library(rclikit)
usethis::use_mit_license()
getFromNamespace("filter", ns="dplyr")
exists("filter", ns="dplyr")
exists("filter")
exists("filter", where="package:dplyr")
exists("filter", where="package:dplyr", mode="function")
library(dplyr)
exists("filter", where="package:dplyr", mode="function")
get_config_dir <- function(){
os_conf_dir <- rappdirs::user_config_dir()
paste0(os_conf_dir, "rclikit")
}
get_config_dir()
get_config_dir <- function(){
os_conf_dir <- rappdirs::user_config_dir()
paste0(os_conf_dir, "/rclikit")
}
get_config_dir <- function(){
os_conf_dir <- rappdirs::user_config_dir()
paste0(os_conf_dir, "/rclikit")
}
get_config_dir()
conf_dir_exists <- function(){
dir.exists(get_config_dir())
}
conf_dir_exists()
get_config_dir <- function(){
os_conf_dir <- rappdirs::user_config_dir()
paste0(os_conf_dir, "/rclikit")
}
config_dir_exists <- function(){
dir.exists(get_config_dir())
}
create_config_dir <- function(){
if( !config_dir_exists() ){
dir.create(get_config_dir())
}
}
create_config_dir()
config_dir_exists()
?rappdirs::user_config_dir
usethis::use_readme_rmd()
usethis::use_lifecycle_badge("experimental")
find.package()
find.package("ggplot2")
installed.packages()
installed.packages()$Package
installed.packages()["Package"]
installed.packages()[,"Package"]
installed.packages()[,"Package"] |> names()
names(installed.packages()[,"Package"])
names(installed.packages()[,"Package"])
find.package("ggplot2")
package_has_rclikit_dir <- function(path){
rclikit_dir <- paste0(path, "/rclickit")
dir.exists(rclikit_dir)
}
package_has_rclikit_dir(find.package("ggplot2"))
dir(find.package("rclikit"))
dir(paste0(find.package("rclikit"), "/rclikit"))
package_has_rclikit_dir <- function(package){
package_path <- find.package(package = package)
rclikit_dir <- paste0(package_path, "/rclickit")
dir.exists(rclikit_dir)
}
package_has_rclikit_dir("ggplot2")
package_has_rclikit_dir("rclikit")
package <- "rclikit"
package_path <- find.package(package = package)
rclikit_dir <- paste0(package_path, "/rclickit")
package_has_rclikit_dir <- function(package){
package_path <- find.package(package = package)
rclikit_dir <- paste0(package_path, "/rclikit")
dir.exists(rclikit_dir)
}
package_has_rclikit_dir("ggplot2")
package_has_rclikit_dir("rclikit")
library(rclikit)
rclikit:::package_has_rclikit_dir("ggplot2")
rclikit:::package_has_rclikit_dir("rclikit")
discover_package_scripts <- function(package){
package_path <- find.package(package = package)
package_rclikit_path <- paste0(package_path, "/rclikit")
dir(path = package_rclikit, full.names = TRUE)
}
discover_package_scripts("rclikit")
discover_package_scripts <- function(package){
package_path <- find.package(package = package)
package_rclikit_path <- paste0(package_path, "/rclikit")
dir(path = package_rclikit_path, full.names = TRUE)
}
discover_package_scripts("rclikit")
create_config_dir <- function(){
if( !config_dir_exists() ){
dir.create(get_config_dir())
} else {
warning("Config directory already exists!")
}
}
create_config_dir()
discover_package_scripts("rclikit")
file.symlink("/Library/Frameworks/R.framework/Versions/4.1/Resources/library/rclikit/rclikit/renv.R", get_config_dir())
dir(get_config_dir())
system("open ", get_config_dir())
system2("open ", get_config_dir())
system2("open", get_config_dir())
system2("open", "\"", get_config_dir(), "\"")
system2("open", "'", get_config_dir(), "'")
system2("open", c("'", get_config_dir(), "'")
)
get_config_dir()
config_dir_exists()
uninstall_scripts <- function(){
unlink(get_config_dir())
}
uninstall_scripts()
uninstall_scripts <- function(){
unlink(get_config_dir(), recursive = TRUE)
}
uninstall_scripts()
create_config_dir <- function(){
if( !config_dir_exists() ){
bin_dir <- paste0(get_config_dir(), "/bin")
dir.create(bin_dir, recursive = TRUE)
} else {
warning("Config directory already exists!")
}
}
create_config_dir <- function(){
if( !config_dir_exists() ){
bin_dir <- paste0(get_config_dir(), "/bin")
dir.create(bin_dir, recursive = TRUE)
} else {
warning("Config directory already exists!")
}
}
create_config_dir()
get_bin_dir <- function(){
paste0(get_config_dir(), "/bin/")
}
get_bin_dir()
discover_cli_scripts <- function(package = NULL){
if(is.null(package)){
installed_packages <- names(installed.packages()[,"Package"])
for (package in installed_packages){
if (package_has_rclikit_dir(package)){
dicovered_scripts <- discover_package_scripts(package)
for (script in discovered_scripts){
file.symlink(script, get_bin_dir())
}
}
}
} else {
dicovered_scripts <- discover_package_scripts(package)
for (script in discovered_scripts){
file.symlink(script, get_bin_dir())
}
}
}
discover_cli_scripts()
discover_cli_scripts <- function(package = NULL){
if(is.null(package)){
installed_packages <- names(installed.packages()[,"Package"])
for (package in installed_packages){
if (package_has_rclikit_dir(package)){
discovered_scripts <- discover_package_scripts(package)
for (script in discovered_scripts){
file.symlink(script, get_bin_dir())
}
}
}
} else {
dicovered_scripts <- discover_package_scripts(package)
for (script in discovered_scripts){
file.symlink(script, get_bin_dir())
}
}
}
discover_cli_scripts()
library(rclikit)
rclikit:::discover_package_scripts()
rclikit:::discover_cli_scripts()
rclikit:::uninstall_scripts()
rclikit:::create_config_dir()
rclikit:::discover_cli_scripts()
add_rclikit_to_path <- function(){
bashrc <- "~/.bashrc"
if(file.exists(bashrc)){
cat(paste0("# Added for rclikit\nexport PATH=", get_bin_dir(), ":${PATH}"),
file = bashrc,
append = TRUE)
}
}
add_rclikit_to_path()
add_rclikit_to_path <- function(){
bashrc <- "~/.bashrc"
if(file.exists(bashrc)){
cat(paste0("# Added for rclikit\nexport PATH=\"", get_bin_dir(), "\":${PATH}"),
file = bashrc,
append = TRUE)
}
}
add_rclikit_to_path()
library(rclikit)
rclikit:::add_rclikit_to_path()
library(rclikit)
library(rclikit)
library(rclikit)
library(rclikit)
library(rclikit)
install.packages("lintr")
install.packages("lintr")
install.packages("styler")
use_rclikit_script <- function(scriptname){
if (!file.exists("DESCRIPTION")){
stop("This function should be run from the root directory of a package.")
}
if (!dir.exists("inst/rclikit")){
dir.create("inst/rclikit", recursive = TRUE)
}
script_path <- paste0("inst/rclikit/", scriptname, ".R")
if (file.exists(script_path)){
stop("A script with the requested name already exists")
}
file.create(script_path)
cat("#!/usr/bin/env Rscript", file = script_path)
Sys.chmod(script_path, mode = "0755", use_umask = FALSE)
}
use_rclikit_script("banana")
use_rclikit_script("abby")
use_rclikit_script("network")
library(rclikit)
rclikit:::uninstall_scripts()
rclikit:::discover_cli_scripts()
rclikit:::create_config_dir()
rclikit:::discover_cli_scripts()
library(rclikit)
rclikit:::uninstall_scripts()
rclikit:::discover_cli_scripts()
get_bin_dir()
library(rclikit)
rclikit:::uninstall_scripts()
rclikit:::discover_cli_scripts()
rclikit:::create_config_dir()
rclikit:::discover_cli_scripts()
add_rclikit_to_path <- function(shell){
shell_profile <- switch(shell,
"bashrc" = "~/.bashrc",
"zshrc" = "~/.zshrc",
shell)
if(file.exists(shell_profile)){
cat(paste0("# Added for rclikit\nexport PATH=\"", get_bin_dir(), "\":${PATH}"),
file = shell_profile,
append = TRUE)
}
}
add_rclikit_to_path <- function(shell){
shell_profile <- switch(shell,
"bashrc" = "~/.bashrc",
"zshrc" = "~/.zshrc",
shell)
cat(shell_profile)
stop()
if(file.exists(shell_profile)){
cat(paste0("# Added for rclikit\nexport PATH=\"", get_bin_dir(), "\":${PATH}"),
file = shell_profile,
append = TRUE)
}
}
add_rclikit_to_path()
add_rclikit_to_path("bashrc")
add_rclikit_to_path("bash")
add_rclikit_to_path("zsh")
add_rclikit_to_path("banana")
library(rclikit)
packageDescription("ggplot2")
discover_packages_with_scripts <- function(){
packages <- c()
installed_packages <- names(utils::installed.packages()[,"Package"])
for (package in installed_packages){
if (package_has_rclikit_dir(package)){
packages <- c(package, packages)
}
}
}
discover_packages_with_scripts()
package_has_rclikit_dir <- function(package){
package_path <- find.package(package = package)
rclikit_dir <- paste0(package_path, "/rclikit")
dir.exists(rclikit_dir)
}
discover_packages_with_scripts <- function(){
packages <- c()
installed_packages <- names(utils::installed.packages()[,"Package"])
for (package in installed_packages){
if (package_has_rclikit_dir(package)){
packages <- c(package, packages)
}
}
}
discover_packages_with_scripts()
discover_packages_with_scripts <- function(){
packages <- c()
installed_packages <- names(utils::installed.packages()[,"Package"])
for (package in installed_packages){
if (package_has_rclikit_dir(package)){
packages <- c(package, packages)
}
}
packages
}
discover_packages_with_scripts()
c(1, c(2,3,4))
1:4
rclikit:::uninstall_scripts()
